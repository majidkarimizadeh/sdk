name: Dev to Main Release Workflow

on:
  push:
    branches:
      - dev

jobs:
  prepare-and-create-pr:
    name: Prepare and Create PR
    runs-on: ubuntu-latest
    steps:
      # Checkout the dev branch code
      - name: Checkout code
        uses: actions/checkout@v3

      # Run go mod tidy
      - name: Run go mod tidy
        run: go mod tidy

      # Set the version (customize this logic as needed)
      - name: Set Version
        id: set_version
        run: |
          VERSION="0.0.1-$(git rev-parse --short HEAD)"
          echo "version=$VERSION" >> $GITHUB_ENV

      # Commit changes to go.mod if modified
      - name: Commit and Push Changes
        run: |
          
          git config --global user.name "majidkarimizadeh"
          git config --global user.email "m.karimizadeh@global.leaseweb.com"
          
          # Define the new branch name
          NEW_BRANCH="feature/auto-updates-$(date +%Y%m%d%H%M%S)"
          echo "auto_update_branch=$NEW_BRANCH" >> $GITHUB_ENV

          # Create a new branch
          git checkout -b "$NEW_BRANCH"

          if [ "$(git status --porcelain)" ]; then
            git add .
            git commit -m "automated update"
            git push origin "$NEW_BRANCH"
          fi

      # Create a Pull Request to the main branch
      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          branch: ${{ env.auto_update_branch }}
          base: main
          title: "Release ${{ env.version }}"
          body: |
            This PR merges the changes from `${{ env.auto_update_branch }}` to `main` and includes:
            - Code cleanup with `go mod tidy`
            - Version set to `${{ env.version }}`
          labels: automerge

  # auto-release:
  #   name: Auto Release
  #   runs-on: ubuntu-latest
  #   needs: prepare-and-create-pr
  #   if: github.event.pull_request.merged == true
  #   steps:
  #     # Checkout the main branch
  #     - name: Checkout main branch
  #       uses: actions/checkout@v3
  #       with:
  #         ref: main

  #     # Create a release
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       with:
  #         tag_name: ${{ env.version }}
  #         release_name: "Release ${{ env.version }}"
  #         body: |
  #           Automated release for version `${{ env.version }}`
  #         draft: false
  #         prerelease: false
